---
date: 2016-03-09T19:56:50+01:00
title: "Python for Computing"
weight: 30
---

## Python for Computing

There are many online resources for learning Python. A good place to start is
the documentation provided by the Python Software Foundation, located here:
https://www.python.org/doc/

This chapter focuses on how to use Python within a Jupyter notebook. Doing
simple calculations in Python is very straightforward. However, once you try to
do something complex, there are a few tricks to learn.  In particular,  how to
get plots to appear in the notebook, how to do animations, and a few other
niceties. 

## Python 2 or 3

::: {.callout-note}
Use **Python 3**, please. 
:::

## Plotting in a Python notebook

Three things before you can plot. 

  - you tell Jupyter that you want plots to appear inline
  - you load in numerical Python so you can deal with numerical arrays
  - you load in PyPlot to do your plotting. 

This is done with the following code:


```python
%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
```

You don't need to use the "as np" or the "as plt" but it helps to keep the
namespace clean. So when you call functions like "sin" you need to say where it
comes from, as in "np.sin"

Now, to plot a few numbers, you just call the plot function, with the numbers as
an array:

```python
plt.plot([1,4,9,16,25])
```

![png](/img/P_Poutput_3_1.png)


You can plot a piece of the sine function in a similar manner, passing a list of
numbers to the `sin` function:


```python
plt.plot(np.sin([0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1.0]))
```

![png](/img/P_Poutput_5_1.png)


Usually you want to plot x and y values together, which you can do as follows:


```python
x = [0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6];
y = np.sin(x);
plt.plot(x,y)
```

![png](/img/P_Poutput_7_1.png)

## Animating Plots

We can use html5 for animation, as suggested in [this web
page](http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/).

This seems to be the modern way to do animation in Python. 


First step is to initialize some things in Python.

  - we need %matplotlib inline to get things to plot right on the notebook
  - we need numpy for the math
  - we need matplotlib for plotting
  - we need animation from matplotlib, and HTML from iPython.display to show the
    animations

We get all these with the following imports:

```python
%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import animation, rc
from IPython.display import HTML
```

We now have four steps to get an animated plot

  - set up the figure frame
  - define the initializing function
  - define the function that draws each frame of the animation
  - call the animator function, which creates all the frames and saves them for
    you

Then we are ready to call "HTML" to display the animation.


```python
# First set up the figure, the axis, and the plot element we want to animate
fig, ax = plt.subplots()

ax.set_xlim(( 0, 2))
ax.set_ylim((-2, 2))

line, = ax.plot([], [], lw=2)
# NOTE: THIS WILL DISPLAY JUST AN EMPTY BOX.
```

![png](/img/P_Aoutput_3_0.png)

Initialization function: plot the background of each frame
```python
def init():
    line.set_data([], [])
    return (line,)
```


Animation function. This is called sequentially
```python
def animate(i):
    x = np.linspace(0, 2, 1000)
    y = np.sin(2 * np.pi * (x - 0.01 * i))
    line.set_data(x, y)
    return (line,)
```


Call the animator. blit=True means only re-draw the parts that have changed.
```python
anim = animation.FuncAnimation(fig, animate, init_func=init,
                               frames=100, interval=20, blit=True)

HTML(anim.to_html5_video())
```


<video width="600.0" height="400.0" controls autoplay loop>
  <source type="video/mp4" src="data:video/mp4;base64,AAAAHGZ0eXBNNFYgAAACAGlzb21pc28yYXZjMQAAAAhmcmVlAACblm1kYXQAAAKhBgX//53cRem9
5tlIt5Ys2CDZI+7veDI2NCAtIGNvcmUgMTQ4IC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENv
cHlsZWZ0IDIwMDMtMjAxNiAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9w
dGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDExMyBtZT1o
ZXggc3VibWU9NyBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0xIG1lX3JhbmdlPTE2
IGNocm9tYV9tZT0xIHRyZWxsaXM9MSA4eDhkY3Q9MSBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0
X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0tMiB0aHJlYWRzPTEyIGxvb2thaGVhZF90aHJlYWRz
PTIgc2xpY2VkX3RocmVhZHM9MCBucj0wIGRlY2ltYXRlPTEgaW50ZXJsYWNlZD0wIGJsdXJheV9j
b21wYXQ9MCBjb25zdHJhaW5lZF9pbnRyYT0wIGJmcmFtZXM9MyBiX3B5cmFtaWQ9MiBiX2FkYXB0
PTEgYl9iaWFzPTAgZGlyZWN0PTEgd2VpZ2h0Yj0xIG9wZW5fZ29wPTAgd2VpZ2h0cD0yIGtleWlu
dD0yNTAga2V5aW50X21pbj0yNSBzY2VuZWN1dD00MCBpbnRyYV9yZWZyZXNoPTAgcmNfbG9va2Fo
ZWFkPTQwIHJjPWNyZiBtYnRyZWU9MSBjcmY9MjMuMCBxY29tcD0wLjYwIHFwbWluPTAgcXBtYXg9
NjkgcXBzdGVwPTQgaXBfcmF0aW89MS40MCBhcT0xOjEuMDAAgAAAFutliIQAL//+9q78yytHC5Uu
HVl7s1Hy6Ely/YgwfWgAAAMAAAMAACbiomdFhTHibIAAAC+Te5z3Pad53AAUywMv1jzv/Rt+kvNT
Byqp/2w2NZ73E7fntr3RGFKiHUwEOpr975eEt5WQCBG+FxYTNiRtmk8HNCuubUzMVXNyLlWIuaNY
XkLYLc/c7Ord6YrPWMCdEXPdBChCxi14ILQMFv9TYGFU/IpOE0NNPy7C9PsNoV8W5ROTL4AhyKXj
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
ACBtZGhkAAAAAAAAAAAAAAAAAAAyAAAAZABVxAAAAAAALWhkbHIAAAAAAAAAAHZpZGUAAAAAAAAA
AAAAAABWaWRlb0hhbmRsZXIAAAAF9G1pbmYAAAAUdm1oZAAAAAEAAAAAAAAAAAAAACRkaW5mAAAA
HGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAABbRzdGJsAAAAtHN0c2QAAAAAAAAAAQAAAKRhdmMx
AAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAlgBkABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAGP//AAAAMmF2Y0MBZAAf/+EAGWdkAB+s2UCYM+XhAAADAAEAAAMA
ZA8YMZYBAAZo6+PLIsAAAAAcdXVpZGtoQPJfJE/FujmlG88DI/MAAAAAAAAAGHN0dHMAAAAAAAAA
AQAAAGQAAAEAAAAAFHN0c3MAAAAAAAAAAQAAAAEAAAL4Y3R0cwAAAAAAAABdAAAAAQAAAgAAAAAB
AAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAMAAAAAAQAAAQAAAAABAAAEAAAAAAIA
AAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAA
AAAAAAABAAABAAAAAAEAAAQAAAAAAgAAAQAAAAABAAAEAAAAAAIAAAEAAAAAAQAABAAAAAACAAAB
AAAAAAEAAAMAAAAAAQAAAQAAAAABAAADAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAA
AAAAAQAAAQAAAAABAAADAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAA
AAABAAADAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAA
AAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAMAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAA
AQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAAB
AAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEA
AAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAA
AQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAA
AAAAAAEAAAEAAAAAAQAABAAAAAACAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEA
AAAAAQAABAAAAAACAAABAAAAAAEAAAMAAAAAAQAAAQAAAAABAAAEAAAAAAIAAAEAAAAAHHN0c2MA
AAAAAAAAAQAAAAEAAABkAAAAAQAAAaRzdHN6AAAAAAAAAAAAAABkAAAZlAAAAr8AAAGiAAAA9wAA
AP8AAAGOAAABBQAAAh8AAAEdAAAA0AAAAa8AAAGDAAABHwAAAPkAAAIJAAABRAAAAO8AAADiAAAC
WgAAAW0AAAD0AAABtwAAAWIAAADcAAABwQAAAUMAAAEHAAACOwAAAQ8AAAHgAAAA1wAAAjIAAAE4
AAAA7AAAAOAAAAH2AAAA1QAAAfEAAAD3AAAAzwAAAM0AAAHeAAABAAAAAg8AAADzAAAA1AAAANcA
AAIZAAABIQAAAO8AAADHAAACJQAAAOsAAAGaAAABIwAAAMQAAADqAAAB2gAAATQAAAEYAAAA9QAA
AhwAAAFWAAABAwAAAP8AAAIPAAAA+AAAAMkAAADjAAACBQAAARIAAADmAAAA3wAAAkMAAAEDAAAA
8wAAANAAAAH0AAABAwAAANwAAADmAAACNAAAARAAAAEBAAAAxQAAAqkAAAEdAAAA0gAAAhIAAAGQ
AAABBQAAAQAAAAGYAAABOQAAAOoAAAHnAAABCAAAASwAAAFRAAABFQAAABRzdGNvAAAAAAAAAAEA
AAAsAAAAYnVkdGEAAABabWV0YQAAAAAAAAAhaGRscgAAAAAAAAAAbWRpcmFwcGwAAAAAAAAAAAAA
AAAtaWxzdAAAACWpdG9vAAAAHWRhdGEAAAABAAAAAExhdmY1Ny40MS4xMDA=
">
  Your browser does not support the video tag.
</video>



 Anytime you need the animation, you can call it up at will, with the following
 code:


```python
# equivalent to rcParams['animation.html'] = 'html5'
rc('animation', html='html5')
```


## Data Analysis

### A simple demo with pandas in Python

This notebook is based on course notes from Lamoureux's course Math 651 at the
University of Calgary, Winter 2016.

This was an exercise to  try out some resource in Python. Specifically, we want
to scrape some data from the web concerning stock prices, and display in a
Panda. Then do some basic data analysis on the information.

We take advantage of the fact that there is a lot of financial data freely
accessible on the web, and lots of people post information about how to use it.


### Pandas in Python

### How to access real data from the web and apply data analysis tools.

I am using the book __Python for Data Analysis__ by Wes McKinney as a reference
for this section.

The point of using Python for this is that a lot of people have created good
code to do this. 

The pandas name comes from Panel Data, an econometrics terms for
multidimensional structured data sets, as well as from Python Data Analysis.

The dataframe objects that appear in pandas originated in R. But apparently
they have more functionality in Python than in R. 

I will be using PYLAB as well in this section, so we can make use of NUMPY and
MATPLOTLIB.

### Accessing financial data

For free, historical data on commodities like Oil, you can try this site:
http://www.databank.rbs.com This site will download data directly into
spreadsheets for you, plot graphs of historical data, etc. Here is an example of
oil prices (West Texas Intermediate), over the last 15 years. Look how low it
goes...

![Image from RBS DataBank](/img/RBS_graph.jpg)

Yahoo supplies current stock and commodity prices. Here is an interesting site
that tells you how to download loads of data into a csv file. 
http://www.financialwisdomforum.org/gummy-stuff/Yahoo-data.htm

Here is another site that discusses accessing various financial data sources.
http://quant.stackexchange.com/questions/141/what-data-sources-are-available-online


### Loading data off the web
To get away from the highly contentious issues of oil prices and political
parties, let's look at some simple stock prices -- say Apple and Microsoft. We
can import some basic webtools to get prices directly from Yahoo.



```python
# Get some basic tools
%pylab inline
from pandas import Series, DataFrame
import pandas as pd
import pandas.io.data as web

```

```python
# Here are apple and microsoft closing prices since 2001
aapl = web.get_data_yahoo('AAPL','2001-01-01')['Adj Close']
msft = web.get_data_yahoo('MSFT','2001-01-01')['Adj Close']
subplot(2,1,1)
plot(aapl)
subplot(2,1,2)
plot(msft)
```

![png](/img/output_4_1.png)



```python
aapl


    Date
    2001-01-02      0.978015
    2001-01-03      1.076639
    2001-01-04      1.121841
    2001-01-05      1.076639
    2001-01-08      1.088967
    2001-01-09      1.130060
    2001-01-10      1.088967
    2001-01-11      1.183481
    2001-01-12      1.130060
    2001-01-16      1.125950
    2001-01-17      1.105404
    2001-01-18      1.228683
    2001-01-19      1.282104
    2001-01-22      1.265667
    2001-01-23      1.347853
    2001-01-24      1.347853
    2001-01-25      1.310869
    2001-01-26      1.286213
    2001-01-29      1.425930
    2001-01-30      1.430039
    2001-01-31      1.421820
    2001-02-01      1.388946
    2001-02-02      1.356072
    2001-02-05      1.327306
    2001-02-06      1.388946
    2001-02-07      1.364290
    2001-02-08      1.364290
    2001-02-09      1.257448
    2001-02-12      1.294432
    2001-02-13      1.257448
                     ...    
    2016-05-04     93.620002
    2016-05-05     93.239998
    2016-05-06     92.720001
    2016-05-09     92.790001
    2016-05-10     93.419998
    2016-05-11     92.510002
    2016-05-12     90.339996
    2016-05-13     90.519997
    2016-05-16     93.879997
    2016-05-17     93.489998
    2016-05-18     94.559998
    2016-05-19     94.199997
    2016-05-20     95.220001
    2016-05-23     96.430000
    2016-05-24     97.900002
    2016-05-25     99.620003
    2016-05-26    100.410004
    2016-05-27    100.349998
    2016-05-31     99.860001
    2016-06-01     98.459999
    2016-06-02     97.720001
    2016-06-03     97.919998
    2016-06-06     98.629997
    2016-06-07     99.029999
    2016-06-08     98.940002
    2016-06-09     99.650002
    2016-06-10     98.830002
    2016-06-13     97.339996
    2016-06-14     97.459999
    2016-06-15     97.139999
    Name: Adj Close, dtype: float64
```



Let's look at the changes in the stock prices, normalized as a percentage
```python
aapl_rets = aapl.pct_change()
msft_rets = msft.pct_change()
subplot(2,1,1)
plot(aapl_rets)
subplot(2,1,2)
plot(msft_rets)
```

![png](/img/output_6_1.png)


Let's look at the correlation between these two series
```python
pd.rolling_corr(aapl_rets, msft_rets, 250).plot()

    /opt/conda/envs/python2/lib/python2.7/site-packages/ipykernel/__main__.py:2: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with 
    	Series.rolling(window=250).corr(other=<Series>)
      from ipykernel import kernelapp as app
```


![png](/img/output_7_2.png)


### Getting fancy.
Now, we can use some more sophisticated statistical tools, like least squares
regression. However, I had to do some work to get Python to recognize these
items. But I didn't work too hard, I just followed the error messages.

It became clear that I needed to go back to a terminal window to load in some
packages. The two commands I had to type in were

  - pip install statsmodels
  - pip install patsy

'pip' is an 'python installer package' that install packages of code onto your
computer (or whatever machine is running your python). The two packages
'statsmodels' and 'patsy' are assorted statistical packages. I don't know much
about them, but they are easy to find on the web.


```python
# We may also try a least square regression, also built in as a panda function
model = pd.ols(y=aapl_rets, x={'MSFT': msft_rets},window=256)

    /opt/conda/envs/python2/lib/python2.7/site-packages/ipykernel/__main__.py:2: FutureWarning: The pandas.stats.ols module is deprecated and will be removed in a future version. We refer to external packages like statsmodels, see some examples here: http://statsmodels.sourceforge.net/stable/regression.html
      from ipykernel import kernelapp as app
model.beta
```

<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>MSFT</th>
      <th>intercept</th>
    </tr>
    <tr>
      <th>Date</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2002-01-14</th>
      <td>0.796463</td>
      <td>0.000416</td>
    </tr>
    <tr>
      <th>2002-01-15</th>
      <td>0.788022</td>
      <td>0.000417</td>
    </tr>
    <tr>
      <th>2002-01-16</th>
      <td>0.789784</td>
      <td>0.000191</td>
    </tr>
    <tr>
      <th>2002-01-17</th>
      <td>0.802081</td>
      <td>0.000600</td>
    </tr>
    <tr>
      <th>2002-01-18</th>
      <td>0.793941</td>
      <td>0.000671</td>
    </tr>
    <tr>
      <th>2002-01-22</th>
      <td>0.796478</td>
      <td>0.000718</td>
    </tr>
    <tr>
      <th>2002-01-23</th>
      <td>0.797909</td>
      <td>0.001172</td>
    </tr>
    <tr>
      <th>2002-01-24</th>
      <td>0.786143</td>
      <td>0.000960</td>
    </tr>
    <tr>
      <th>2002-01-25</th>
      <td>0.781526</td>
      <td>0.001102</td>
    </tr>
    <tr>
      <th>2002-01-28</th>
      <td>0.782449</td>
      <td>0.001064</td>
    </tr>
    <tr>
      <th>2002-01-29</th>
      <td>0.782113</td>
      <td>0.001196</td>
    </tr>
    <tr>
      <th>2002-01-30</th>
      <td>0.764488</td>
      <td>0.001069</td>
    </tr>
    <tr>
      <th>2002-01-31</th>
      <td>0.784935</td>
      <td>0.001246</td>
    </tr>
    <tr>
      <th>2002-02-01</th>
      <td>0.784775</td>
      <td>0.001254</td>
    </tr>
    <tr>
      <th>2002-02-04</th>
      <td>0.774178</td>
      <td>0.001252</td>
    </tr>
    <tr>
      <th>2002-02-05</th>
      <td>0.781460</td>
      <td>0.001383</td>
    </tr>
    <tr>
      <th>2002-02-06</th>
      <td>0.781529</td>
      <td>0.001354</td>
    </tr>
    <tr>
      <th>2002-02-07</th>
      <td>0.792091</td>
      <td>0.001506</td>
    </tr>
    <tr>
      <th>2002-02-08</th>
      <td>0.785451</td>
      <td>0.001019</td>
    </tr>
    <tr>
      <th>2002-02-11</th>
      <td>0.788570</td>
      <td>0.001084</td>
    </tr>
    <tr>
      <th>2002-02-12</th>
      <td>0.793316</td>
      <td>0.001001</td>
    </tr>
    <tr>
      <th>2002-02-13</th>
      <td>0.796715</td>
      <td>0.001117</td>
    </tr>
    <tr>
      <th>2002-02-14</th>
      <td>0.796227</td>
      <td>0.001075</td>
    </tr>
    <tr>
      <th>2002-02-15</th>
      <td>0.801823</td>
      <td>0.001176</td>
    </tr>
    <tr>
      <th>2002-02-19</th>
      <td>0.804453</td>
      <td>0.000885</td>
    </tr>
    <tr>
      <th>2002-02-20</th>
      <td>0.814666</td>
      <td>0.001097</td>
    </tr>
    <tr>
      <th>2002-02-21</th>
      <td>0.830058</td>
      <td>0.000799</td>
    </tr>
    <tr>
      <th>2002-02-22</th>
      <td>0.818041</td>
      <td>0.001174</td>
    </tr>
    <tr>
      <th>2002-02-25</th>
      <td>0.822848</td>
      <td>0.001161</td>
    </tr>
    <tr>
      <th>2002-02-26</th>
      <td>0.821503</td>
      <td>0.001248</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>2016-05-04</th>
      <td>0.634886</td>
      <td>-0.001187</td>
    </tr>
    <tr>
      <th>2016-05-05</th>
      <td>0.632351</td>
      <td>-0.001121</td>
    </tr>
    <tr>
      <th>2016-05-06</th>
      <td>0.631153</td>
      <td>-0.001282</td>
    </tr>
    <tr>
      <th>2016-05-09</th>
      <td>0.631186</td>
      <td>-0.001277</td>
    </tr>
    <tr>
      <th>2016-05-10</th>
      <td>0.627805</td>
      <td>-0.001240</td>
    </tr>
    <tr>
      <th>2016-05-11</th>
      <td>0.632612</td>
      <td>-0.001326</td>
    </tr>
    <tr>
      <th>2016-05-12</th>
      <td>0.629215</td>
      <td>-0.001440</td>
    </tr>
    <tr>
      <th>2016-05-13</th>
      <td>0.626302</td>
      <td>-0.001429</td>
    </tr>
    <tr>
      <th>2016-05-16</th>
      <td>0.631538</td>
      <td>-0.001302</td>
    </tr>
    <tr>
      <th>2016-05-17</th>
      <td>0.629171</td>
      <td>-0.001258</td>
    </tr>
    <tr>
      <th>2016-05-18</th>
      <td>0.629934</td>
      <td>-0.001218</td>
    </tr>
    <tr>
      <th>2016-05-19</th>
      <td>0.626321</td>
      <td>-0.001243</td>
    </tr>
    <tr>
      <th>2016-05-20</th>
      <td>0.627607</td>
      <td>-0.001232</td>
    </tr>
    <tr>
      <th>2016-05-23</th>
      <td>0.625496</td>
      <td>-0.001210</td>
    </tr>
    <tr>
      <th>2016-05-24</th>
      <td>0.624308</td>
      <td>-0.001229</td>
    </tr>
    <tr>
      <th>2016-05-25</th>
      <td>0.625938</td>
      <td>-0.001186</td>
    </tr>
    <tr>
      <th>2016-05-26</th>
      <td>0.625857</td>
      <td>-0.001192</td>
    </tr>
    <tr>
      <th>2016-05-27</th>
      <td>0.628037</td>
      <td>-0.001277</td>
    </tr>
    <tr>
      <th>2016-05-31</th>
      <td>0.624431</td>
      <td>-0.001256</td>
    </tr>
    <tr>
      <th>2016-06-01</th>
      <td>0.623145</td>
      <td>-0.001322</td>
    </tr>
    <tr>
      <th>2016-06-02</th>
      <td>0.623414</td>
      <td>-0.001335</td>
    </tr>
    <tr>
      <th>2016-06-03</th>
      <td>0.620833</td>
      <td>-0.001279</td>
    </tr>
    <tr>
      <th>2016-06-06</th>
      <td>0.621354</td>
      <td>-0.001256</td>
    </tr>
    <tr>
      <th>2016-06-07</th>
      <td>0.621346</td>
      <td>-0.001237</td>
    </tr>
    <tr>
      <th>2016-06-08</th>
      <td>0.621420</td>
      <td>-0.001246</td>
    </tr>
    <tr>
      <th>2016-06-09</th>
      <td>0.620108</td>
      <td>-0.001200</td>
    </tr>
    <tr>
      <th>2016-06-10</th>
      <td>0.620255</td>
      <td>-0.001216</td>
    </tr>
    <tr>
      <th>2016-06-13</th>
      <td>0.619448</td>
      <td>-0.001207</td>
    </tr>
    <tr>
      <th>2016-06-14</th>
      <td>0.618853</td>
      <td>-0.001180</td>
    </tr>
    <tr>
      <th>2016-06-15</th>
      <td>0.618974</td>
      <td>-0.001180</td>
    </tr>
  </tbody>
</table>
<p>3631 rows × 2 columns</p>
</div>


```python
model.beta['MSFT'].plot()
```

![png](/img/output_11_1.png)


Those two graphs looked similar. Let's plot them together
```python
subplot(2,1,1)
pd.rolling_corr(aapl_rets, msft_rets, 250).plot()
title('Rolling correlations')
subplot(2,1,2)
model.beta['MSFT'].plot()
title('Least squaresn model')


    /opt/conda/envs/python2/lib/python2.7/site-packages/ipykernel/__main__.py:3: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with 
    	Series.rolling(window=250).corr(other=<Series>)
      app.launch_new_instance()
```

![png](/img/output_12_2.png)


### more stocks
There is all kinds of neat info on the web. Here is the SPY exchange-traded fund, which tracks the S&P 500 index.


```python
px = web.get_data_yahoo('SPY')['Adj Close']*10
px

    Date
    2010-01-04     998.08658
    2010-01-05    1000.72861
    2010-01-06    1001.43318
    2010-01-07    1005.66052
    2010-01-08    1009.00712
    2010-01-11    1010.41626
    2010-01-12    1000.99287
    2010-01-13    1009.44749
    2010-01-14    1012.17761
    2010-01-15    1000.81670
    2010-01-19    1013.32249
    2010-01-20    1003.01842
    2010-01-21     983.73128
    2010-01-22     961.80210
    2010-01-25     966.73395
    2010-01-26     962.68278
    2010-01-27     967.26241
    2010-01-28     956.16569
    2010-01-29     945.77354
    2010-02-01     960.48105
    2010-02-02     972.10617
    2010-02-03     967.26241
    2010-02-04     937.40701
    2010-02-05     939.34454
    2010-02-08     932.56318
    2010-02-09     944.27638
    2010-02-10     942.42694
    2010-02-11     952.29063
    2010-02-12     951.49804
    2010-02-16     966.46975
                     ...    
    2016-05-04    2050.09995
    2016-05-05    2049.70001
    2016-05-06    2057.20001
    2016-05-09    2058.89999
    2016-05-10    2084.49997
    2016-05-11    2065.00000
    2016-05-12    2065.59998
    2016-05-13    2047.59995
    2016-05-16    2067.79999
    2016-05-17    2048.50006
    2016-05-18    2049.10004
    2016-05-19    2041.99997
    2016-05-20    2054.90005
    2016-05-23    2052.10007
    2016-05-24    2078.69995
    2016-05-25    2092.79999
    2016-05-26    2093.39996
    2016-05-27    2102.40005
    2016-05-31    2098.39996
    2016-06-01    2102.70004
    2016-06-02    2109.10004
    2016-06-03    2102.79999
    2016-06-06    2113.50006
    2016-06-07    2116.79993
    2016-06-08    2123.69995
    2016-06-09    2120.80002
    2016-06-10    2100.70007
    2016-06-13    2084.49997
    2016-06-14    2080.39993
    2016-06-15    2077.50000
    Name: Adj Close, dtype: float64

plot(px)
```

![png](/img/output_15_1.png)

# Scientific Computing in Python

This is a sample of doing some real scientific computing in Python.

We refer to some ideas in the book "Python for Scientists" by John M. Stewart.
Specifically, we want to explore a numerical solver for ordinary differential
equations \(ODEs\), called ODEint. This solver is based on
[lsoda](http://www.oecd-nea.org/tools/abstract/detail/uscd1227), a Fortran
package from Lawrence Livermore Labs that is a reliable workhorse for solving
these difficult problems.

We look at four different ODEs that are interesting, and numerically
challenging. They are:

  * the harmonic oscillator \(or linear pendulum\)
  * the non-linear pendulum
  * the Lorenz equation, which is the model for chaotic behaviour
  * the van der Pols equation, which is an example of a stiff ODE with periodic behaviour.

We do some basic tests of an ODE numerical solver, to test its accuracy, and to
consider whether our asymptotic analysis of a pendulum is any good.

As in previous examples, we must start with code to tell the Notebook to plot
items inline, and load in packages to do numerical computations \(numpy\),
scientific computation \(scipy\) and plotting \(matplotlib\).

```python
%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint # This is the numerical solver
```

We start with a second order linear equation, that has the usual harmonic
oscillator solutions.

$$ 
y''(t) + \omega^2 y(t) = 0, \qquad y(0) = 1, y'(0) = 0.
$$

To put this into the numerical solver, we need to reformulate as a 2
dimensional, first order system:  $$\mathbf{y} = (y,y')^T, \qquad \mathbf{y}'(t)
= (y', -\omega^2 y)^T.$$  Here is a simple code snippet that solves the problem
numerically.

```python
def rhs(Y,t,omega):  # this is the function of the right hand side of the ODE
    y,ydot = Y
    return ydot,-omega*omega*y

t_arr=np.linspace(0,2*np.pi,101)
y_init =[1,0]
omega = 2.0
y_arr=odeint(rhs,y_init,t_arr, args=(omega,))
y,ydot = y_arr[:,0],y_arr[:,1]
plt.ion()
plt.plot(t_arr,y,t_arr,ydot)
```

![png](/img/P_Soutput_3_1.png)

Let's draw a phase portrait, plotting y and ydot together
```python
plt.plot(y,ydot)
plt.title("Solution curve when omega = %4g" % omega)
plt.xlabel("y values")
plt.ylabel("ydot values")
```

![png](/img/P_Soutput_4_1.png)

Now, I would like to test how accurate this numerical code is, by comparing the
exact solution with the numerical solution. The exact solution is given by the
initial values of y\_init, and omega, and involves cosines and sines.

```python
t_arr=np.linspace(0,2*np.pi,101)
y_init =[1,0]
omega = 2.0
y_exact = y_init[0]*np.cos(omega*t_arr) + y_init[1]*np.sin(omega*t_arr)/omega
ydot_exact = -omega*y_init[0]*np.sin(omega*t_arr) + y_init[1]*np.cos(omega*t_arr)
y_arr=odeint(rhs,y_init,t_arr, args=(omega,))
y,ydot = y_arr[:,0],y_arr[:,1]
plt.plot(t_arr,y,t_arr,y_exact)
```

![png](/img/P_Soutput_6_1.png)

We plot the difference
```python
plt.plot(t_arr,y-y_exact)
```

![png](/img/P_Soutput_7_1.png)

So, in the test I did above, we see an error that oscillates and grows with
time, getting to about size 2x 10^\(-7\). Which is single precision accuracy.

Now, apparently ODEint figures out good step sizes on its own. Let's try running
the code again, with different number of steps in the t-variable.

```python
numsteps=1000001  # adjust this parameter
y_init =[1,0]
omega = 2.0
t_arr=np.linspace(0,2*np.pi,numsteps)
y_exact = y_init[0]*np.cos(omega*t_arr) + y_init[1]*np.sin(omega*t_arr)/omega
ydot_exact = -omega*y_init[0]*np.sin(omega*t_arr) + y_init[1]*np.cos(omega*t_arr)
y_arr=odeint(rhs,y_init,t_arr, args=(omega,))
y,ydot = y_arr[:,0],y_arr[:,1]
plt.plot(t_arr,y-y_exact)
```

![png](/img/P_Soutput_9_1.png)

Okay, I went up to one million steps, and the error only reduced to about
1.0x10^\(-7\). Not much of an improvement.

Let's try another experiment, where we go for a really long time. Say 100 time
longer than the example above.

```python
numsteps=100001  # adjust this parameter
y_init =[1,0]
omega = 2.0
t_arr=np.linspace(0,2*1000*np.pi,numsteps)
y_exact = y_init[0]*np.cos(omega*t_arr) + y_init[1]*np.sin(omega*t_arr)/omega
ydot_exact = -omega*y_init[0]*np.sin(omega*t_arr) + y_init[1]*np.cos(omega*t_arr)
y_arr=odeint(rhs,y_init,t_arr, args=(omega,))
y,ydot = y_arr[:,0],y_arr[:,1]
plt.plot(t_arr,y-y_exact)
```

![png](/img/P_Soutput_11_1.png)

Interesting. My little test show the error grow linearly with the length of
time. In the first time, 2x10^\(-7\). For 10 times longer, 2x10^\(-6\). For
100 times longer, 2x10^\(-5\). And so one.

A more subtle question: are these amplitude errors, or phase errors, or perhaps
a combination?

```python
p1=np.size(t_arr)-1
p0=p1-100
plt.plot(t_arr[p0:p1],y[p0:p1],t_arr[p0:p1],y_exact[p0:p1])
```

![png](/img/P_Soutput_13_1.png)

```python
plt.plot(t_arr[p0:p1],y[p0:p1]-y_exact[p0:p1])
```

![png](/img/P_Soutput_14_1.png)

Ah ha! This looks like the negative derivative of the solution, which indicates
we have a phase error. Because with phase error, we see the difference  
$$\cos(t + \delta) - \cos(t) \approx -\delta\cdot \sin(t)$$  
while with an amplitude error, we would see  
$$(1+\delta)\cos(t) - \cos(t) \approx \delta\cdot \cos(t).$$

Let's plot the soluton and the error difference, to see if the derivative zeros
line up with peaks.

```python
plt.plot(t_arr[p0:p1],y_exact[p0:p1],t_arr[p0:p1],3000*(y[p0:p1]-y_exact[p0:p1]))
```

![png](/img/P_Soutput_16_1.png)

Looking at the above, we see they don't quite line up. So a bit of phase error,
a bit of amplitude error.

### The non-linear pendulum

Well, it's not to hard to generalize this stuff to the non-linear pendulum,
where the restoring force has a sin\(t\) in it. We want to observe the period
changes with the initial conditions \(a bigger swing has a longer period\).

The differential equation is:

$$ y''(t) + \omega^2 \sin(y(t)) = 0, \qquad y(0) = \epsilon, y'(0) = 0.$$

To put this into the numerical solver, we need to reformulate as a 2
dimensional, first order system:

$$
\mathbf{y} = (y,y')^T, \qquad \mathbf{y}'(t) = (y', -\omega^2 \sin(y))^T.
$$

Here is a simple code snippet that solves the problem numerically.

```python
def rhsSIN(Y,t,omega):  # this is the function of the right hand side of the ODE
    y,ydot = Y
    return ydot,-omega*omega*np.sin(y)

omega = .1   # basic frequency
epsilon = .5 # initial displacement, in radians (try 0 to .5)
velocity = 0 # try values from 0 to .2
t_arr=np.linspace(0,2*100*np.pi,1001)
y_init =[epsilon,velocity]

# we first set up the exact solution for the linear oscillator
y_exact = y_init[0]*np.cos(omega*t_arr) + y_init[1]*np.sin(omega*t_arr)/omega
ydot_exact = -omega*y_init[0]*np.sin(omega*t_arr) + y_init[1]*np.cos(omega*t_arr)
y_arr=odeint(rhsSIN,y_init,t_arr, args=(omega,))
y,ydot = y_arr[:,0],y_arr[:,1]
plt.ion()
plt.plot(t_arr,y,t_arr,y_exact)
```

![png](/img/P_Soutput_19_1.png)

With epsilon = 0.1 \(radians, which is about 5.7 degrees\), it is hard to see a
period shift. With epsilon = 0.5 \(radians, which just under 30 degrees\), we
clearly see a shift after ten cycles of oscillation.

How big is the shift? Can we figure this out easily with numerics? And how does
it compare with the estimate given by the Poincare-Lindstedt method?

It is kind of fun to set this up with epsilon = pi, which corresponds to an
inverted pendulum. The pendulum sits upside down for a while, then slowly moves
away from this unstable equilibrium point. The behaviour is very different than
the linear harmonic oscillator. We show the example in the next cell.

```python
omega = .1   # basic frequency
epsilon = np.pi+.0001 # initial displacement, in radians (try 0 to .5)
velocity = 0 # try values from 0 to .2
t_arr=np.linspace(0,2*100*np.pi,1001)
y_init =[epsilon,velocity]

# we first set up the exact solution for the linear oscillator
y_exact = y_init[0]*np.cos(omega*t_arr) + y_init[1]*np.sin(omega*t_arr)/omega
ydot_exact = -omega*y_init[0]*np.sin(omega*t_arr) + y_init[1]*np.cos(omega*t_arr)
y_arr=odeint(rhsSIN,y_init,t_arr, args=(omega,))
y,ydot = y_arr[:,0],y_arr[:,1]
plt.ion()
plt.plot(t_arr,y,t_arr,y_exact)
```

![png](/img/P_Soutput_21_1.png)

### The Lorenz equation

You've probably heard of the butterfly effect \(it's even a movie\). The idea is
that weather can demonstrate chaotic behaviour, so that the flap of a butterfly
wing in Brazil could eventually result in a tornado in Alabama.

Lorenz was studying a simplified model for weather, given by a system of three
simple ODEs:

$$x' = \sigma(y-x), \quad y'=\rho x - y - xz, \quad z' = xy - \beta z$$

where $x,y,z$ are functions of time, and $\sigma, \rho,\beta$ are fixed
constants.

When $\rho$ is small, the behaviour is quite predictable. But when $\rho$
gets better than about 24.7, you get strange, aperiodic behaviour.

Here is some code that demonstrates the behaviour. We also include 3D plots

```python
def rhsLZ(u,t,beta,rho,sigma):
    x,y,z = u
    return [sigma*(y-x), rho*x-y-x*z, x*y-beta*z]

sigma = 10.0
beta = 8.0/3.0
rho1 = 29.0
rho2 = 28.8  # two close values for rho give two very different curves

u01=[1.0,1.0,1.0]
u02=[1.0,1.0,1.0]

t=np.linspace(0.0,50.0,10001)
u1=odeint(rhsLZ,u01,t,args=(beta,rho1,sigma))
u2=odeint(rhsLZ,u02,t,args=(beta,rho2,sigma))

x1,y1,z1=u1[:,0],u1[:,1],u1[:,2]
x2,y2,z2=u2[:,0],u2[:,1],u2[:,2]

from mpl_toolkits.mplot3d import Axes3D

plt.ion()
fig=plt.figure()
ax=Axes3D(fig)
ax.plot(x1,y1,z1,'b-')
ax.plot(x2,y2,z2,'r:')
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('z')
ax.set_title('Lorenz equations with rho = %g, %g' % (rho1,rho2))
```

![png](/img/P_Soutput_23_1.png)

```python
fig=plt.figure()
ax=Axes3D(fig)
ax.plot(x1,y1,z1)
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('z')
```

![png](/img/P_Soutput_24_1.png)

```python
fig=plt.figure()
ax=Axes3D(fig)
ax.plot(x2,y2,z2)
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('z')
```

![png](/img/P_Soutput_25_1.png)

You should play around with the time interval \(in the definition of varible t\)
to observe the predictable, followed by chaotic behaviour. ANd play with other
parameters.

### van der Pol equation

This equation is used as a testbed for numerical software. It is nonlinear, and
collapses to a periodic orbit very quickly. We can include information about the
Jacobian, the derivative of the vector function $\mathbf{f}$  in the ODE
system $\mathbf{y}' = \mathbf{f}(\mathbf{y},t)$, into the ODE solver, to help
it choose appropriate step sizes and reduce errors.

The van der Pol equation is this:

$$y'' - \mu(1-y^2)y' + y = 0$$

with the usual initial conditons for $y(0), y'(0)$. In vector form, we write

$$\mathbf{y} = (y,y')^T, \qquad \mathbf{f}(\mathbf{y}) = (y', \mu(1-y^2)y' - y)^T.$$

The Jacobian is a 2x2 matrix of partial derivatives for $\mathbf{f}$, which is

$$
\mathbf{J}(\mathbf{y}) = \left({\begin{array}{cc} 0 & 1 \\ -2\mu y y' - 1 & \mu(1-y^2) \end{array}}\right)
$$

We set up the code as follows:

```python
def rhsVDP(y,t,mu):
    return [ y[1], mu*(1-y[0]**2)*y[1] - y[0]]

def jac(y,t,mu):
    return [ [0,1], [-2*mu*y[0]*y[1]-1, mu*(1-y[0]**2)]]

mu=3 # adjust from 0 to 10, say
t=np.linspace(0,30,10001)
y0=np.array([2.0,0.0])
y,info=odeint(rhsVDP,y0,t,args=(mu,),Dfun=jac,full_output=True)

print("mu = %g, number of Jacobian calls is %d" % (mu, info['nje'][-1]))

plt.plot(t,y)
```

mu = 3, number of Jacobian calls is 0

![png](/img/P_Soutput_28_2.png)

Try playing with the mu parameter. mu=0 gives the harmonic oscillator. mu=10
starts giving pointy spikes. For mu big, you might want to increase the range of
to values, from \[0,30\] to a larger interval like \[0,100\]. Etc.

```python
mu=10 # adjust from 0 to 10, say
t=np.linspace(0,30,10001)
y0=np.array([2.0,0.0])
y,info=odeint(rhsVDP,y0,t,args=(mu,),Dfun=jac,full_output=True)

print("mu = %g, number of Jacobian calls is %d" % (mu, info['nje'][-1]))

plt.plot(t,y)
```

```
mu = 10, number of Jacobian calls is 0
```

![png](/img/P_Soutput_30_2.png)


# Audio Generation

With a few lines of code, we can produce sound and play it. 

We will import a few tools to make this possible, including pylab for plotting
and numerical work. 


```python
%matplotlib inline
from pylab import *
from IPython.display import Audio
```

We now set up five seconds of sound, sampled at 8000 times per second. We
generate two pure tones together at 440 and 442 Hertz. This corresponds to a
musical note at A above middle C. The slight difference in frequencies will
cause a beating, or fluctuation of the sound at 2 beats per second. 


```python
Fs = 8000.0
Len = 5
t = linspace(0,Len,Fs*Len)
f1 = 442.0
f2 = 440.0
signal = sin(2*pi*f1*t) + sin(2*pi*f2*t) 

Audio(data=signal, rate=Fs)
```


<audio controls="controls" >
     <source src="data:audio/wav;base64," type="audio/wav" />
                    Your browser does not support the audio element.
                </audio>
              



We can analyse this signal with the Fourier transform. Plotting, we see the energy is concentrated need 440 Hz (and there is a mirror image in the frequency near 8000-440 Hz). 


```python
freqs = t*Fs/Len   # a list of frequencies, in Hertz
fsig = abs(fft(signal))  # Fourier transform of the signal
plot(freqs,fsig)  # amplitude versus frequency
```




    [<matplotlib.lines.Line2D at 0x7fdb59e82358>]




![png](/img/P_Auoutput_5_1.png)


By zooming in on the relevant part of the signal, we can see the presence of energy at the two frequencies of 440 Hz and 442 Hz.


```python
plot(freqs[2100:2300],fsig[2100:2300])
```

![png](/img/P_Auoutput_7_1.png)


Some note on audio in the computer.

The sound we hear with our ears are the rapid vibrations of air pressure on our
eardrums, usually generated from vibrations of some object like a guitar string,
drum head, or the vocal cords of a human. These sounds are represented as a
function of time. In the computer, we represent this function as a list of
numbers, or samples, that indicate the value of the function at a range of time
values. 

Usually, we sample at uniform time intervals. In the example above, we have 8000
samples per second, for a length of 5 seconds. The Shannon sampling theorem
tells us that we need to sample at least as fast as twice the highest frequency
that we want to reproduce. 

Humans with exceptional hearing can hear frequencies up to 20,000 Hz (20 kHz).
This suggests we should sample at least at 40,000 samples per second for high
quality audio. In fact, a compact disk is sampled at 44100 samples per second,
and digital audio tapes at 48000 samples per second. 

But, since computer speakers are often of lower quality, we typically sample at
lower rates like 8000, 10000, or 22050 samples per second. That give sound that
is "good enough" and saves on computer memory. 



## YouTube
With just a couple of lines, you can insert a YouTube video into your Jupyter
notebook.

```python
from IPython.display import YouTubeVideo
YouTubeVideo('kthi--SH2Nk')   # Counting to 100 in Cree 

```


<iframe
    width="600"
    height="500"
    src="https://www.youtube.com/embed/kthi--SH2Nk"
    frameborder="0"
    allowfullscreen
></iframe>
        

## D3 and Games


# d3 and fancy user interface

We can use a resource called d3 to great very complex user interfaces in a
Notebook.

In this example, a cluster of balls is created that moves around as the
computer mouse chases the balls, as displayed here. Click the picture to
interact with the example.

<a href="/img/assets/P_d3_html.html">
  <img src="/img/assets/Balls.png" alt="Chase the balls" >
</a>


This code was poached from here:
[https://github.com/skariel/IPython_d3_js_demo/blob/master/d3_js_demo.ipynb](https://github.com/skariel/IPython_d3_js_demo/blob/master/d3_js_demo.ipynb)

There are three cells in this example.
  - the first cell creates a file, which has some html code and javascript to
    control the balls
  - the second cell defines Python functions that edie the file, to adjust the
    number of balls, etc.
  - the third cell calls the Python funciton f1 that launches the html and
    javascript. 

Here is the first cell. 
```python
%%writefile f1.template
<!DOCTYPE html>
<html>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <script type="text/javascript" src="https://mbostock.github.io/d3/talk/20111018/d3/d3.js"></script>
    <script type="text/javascript" src="https://mbostock.github.io/d3/talk/20111018/d3/d3.geom.js"></script>
    <script type="text/javascript" src="https://mbostock.github.io/d3/talk/20111018/d3/d3.layout.js"></script>
    <style type="text/css">

circle {
  stroke: #000;
  stroke-opacity: .5;
}

    </style>
  <body>
    <div id="body">
    <script type="text/javascript">

var w = {width},
    h = {height};

var nodes = d3.range({ball_count}).map(function() { return {radius: Math.random() * {rad_fac} + {rad_min}}; }),
    color = d3.scale.category10();

var force = d3.layout.force()
    .gravity(0.1)
    .charge(function(d, i) { return i ? 0 : -2000; })
    .nodes(nodes)
    .size([w, h]);

var root = nodes[0];
root.radius = 0;
root.fixed = true;

force.start();

var svg = d3.select("#body").append("svg:svg")
    .attr("width", w)
    .attr("height", h);

svg.selectAll("circle")
    .data(nodes.slice(1))
  .enter().append("svg:circle")
    .attr("r", function(d) { return d.radius - 2; })
    .style("fill", function(d, i) { return color(i % {color_count}); });

force.on("tick", function(e) {
  var q = d3.geom.quadtree(nodes),
      i = 0,
      n = nodes.length;

  while (++i < n) {
    q.visit(collide(nodes[i]));
  }

  svg.selectAll("circle")
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
});

svg.on("mousemove", function() {
  var p1 = d3.svg.mouse(this);
  root.px = p1[0];
  root.py = p1[1];
  force.resume();
});

function collide(node) {
  var r = node.radius + 16,
      nx1 = node.x - r,
      nx2 = node.x + r,
      ny1 = node.y - r,
      ny2 = node.y + r;
  return function(quad, x1, y1, x2, y2) {
    if (quad.point && (quad.point !== node)) {
      var x = node.x - quad.point.x,
          y = node.y - quad.point.y,
          l = Math.sqrt(x * x + y * y),
          r = node.radius + quad.point.radius;
      if (l < r) {
        l = (l - r) / l * .5;
        node.x -= x *= l;
        node.y -= y *= l;
        quad.point.x += x;
        quad.point.y += y;
      }
    }
    return x1 > nx2
        || x2 < nx1
        || y1 > ny2
        || y2 < ny1;
  };
}

    </script>
  </body>
</html>
```

Here is the second cell.



```python
from IPython.display import IFrame
import re

def replace_all(txt,d):
    rep = dict((re.escape('{'+k+'}'), str(v)) for k, v in d.items())
    pattern = re.compile("|".join(rep.keys()))
    return pattern.sub(lambda m: rep[re.escape(m.group(0))], txt)    

count=0
def serve_html(s,w,h):
    import os
    global count
    count+=1
    fn= '__tmp'+str(os.getpid())+'_'+str(count)+'.html'
    with open(fn,'w') as f:
        f.write(s)
    return IFrame('files/'+fn,w,h)

def f1(w=500,h=400,ball_count=150,rad_min=2,rad_fac=11,color_count=3):
    d={
       'width'      :w,
       'height'     :h,
       'ball_count' :ball_count,
       'rad_min'    :rad_min,
       'rad_fac'    :rad_fac,
       'color_count':color_count
       }
    with open('f1.template','r') as f:
        s=f.read()
    s= replace_all(s,d)        
    return serve_html(s,w+30,h+30)
```

Here is the third and final cell.

```python
f1(ball_count=50, color_count=17, rad_fac=10, rad_min=3, w=600)
```
